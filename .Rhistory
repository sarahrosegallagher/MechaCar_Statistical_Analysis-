#EPA mpg dataset
head(mpg)
plt <- ggplot(mpg, aes(x=class))  #dataset to ggplot2. univariate only assign x
library(tidyverse)
library(tidyverse)
#EPA mpg dataset
head(mpg)
plt <- ggplot(mpg, aes(x=class))  #dataset to ggplot2. univariate only assign x
plt + geom_bar()                  # plus operator to plot on bar
mpg_summary <- mpg %>% group_by(manufacturer) %>% summarize(Vehicle_Count=n(), .groups="keep")
plt <- ggplot(mpg_summary, aes(x=manufacturer, y=Vehicle_Count))
plt + geom_col()
plt <- ggplot(mpg, aes(x=manufacturer))
plt + geom_bar()
avg_by_manu <- mpg %>% group_by(manufacturer) %>% summarize(Average_Hwy = mean(hwy), .groups = "keep")
plt <- ggplot(avg_by_manu, aes(x=manufacturer, y=Average_Hwy))
plt + geom_col()
avg_by_class <- mpg %>% group_by(class) %>% summarize(Average_Hwy = mean(hwy), .groups = "keep")
plt <- ggplot(avg_by_manu, aes(x=class, y=Average_Hwy))
plt + geom_bar()
View(avg_by_class)
avg_by_class <- mpg %>% group_by(class) %>% summarize(Average_Hwy = mean(hwy), .groups = "keep")
plt <- ggplot(avg_by_class, aes(x=class, y=Average_Hwy))
plt + geom_bar()
last_error()
rlang::last_error()
library(tidyverse)
#EPA mpg dataset
head(mpg)
avg_by_class <- mpg %>% group_by(class) %>% summarize(Average_Hwy = mean(hwy), .groups = "keep")
plt <- ggplot(avg_by_class, aes(x=class, y=Average_Hwy))
plt + geom_bar()
plt + geom_bar(stat = count)
plt + geom_bar(stat = "identity")
mpg_summary <- mpg %>% group_by(manufacturer) %>% summarize(Vehicle_Count=n(), .groups="keep")
plt <- ggplot(mpg_summary, aes(x=manufacturer, y=Vehicle_Count))
plt + geom_col() + xlab("Manufacturing Company") +ylab("Number of Vehicles in Dataset")
plt + geom_col() + xlab("Manufacturing Company") +ylab("Number of Vehicles in Dataset") + #add axes labels
theme(axis.text.x = element_text(angle=45,hjust=1)) #rotate text
mpg_toyota <- subset(mpg, manufacturer == "toyota") %>% group_by(cyl) %>% summarize(Mean_Hwy=mean(hwy), .groups = "keep")
View(mpg_toyota)
plt<- ggplot(mpg_toyota, aes(x=cyl, y=Mean_Hwy))
plt + geom_line()
plt + geom_line() + scale_x_discrete(limits=4,6,8) +scale_y_continuous(breaks= c(15:30))
plt + geom_line() + scale_x_discrete(limits=c(4,6,8) +scale_y_continuous(breaks= c(15:30))
plt + geom_line() + scale_x_discrete(limits=c(4,6,8)) +scale_y_continuous(breaks= c(15:30))
plt + geom_line() + scale_x_discrete(limits=c(4,6,8)) +scale_y_continuous(breaks= c(15:30))
plt <- ggplot(mpg, aes(x=displ, y=cty))
plt + geom_point() + xlab("Engine Size(L)") + ylab("City Fuel-Efficiency (MPG)")
plt <- ggplot(mpg, aes(x=displ, y=cty, color=class))
plt + geom_point() + labs(x="Engine Size (L)", y="City Fuel-Efficiency (MPG)", color="Vehicle Class") #add scatter plot with labels
#shape
plt <- ggplot(mpg,aes(x=displ,y=cty,color=class,shape=drv)) #import dataset into ggplot2
plt + geom_point() + labs(x="Engine Size (L)", y="City Fuel-Efficiency (MPG)", color="Vehicle Class",shape="Type of Drive") #add scatter plot with multiple aesthetics
#size
plt <- ggplot(mpg,aes(x=displ,y=cty,color=class,shape=drv, size=cty))
plt + geom_point() + labs(x="Engine Size (L)", y="City Fuel-Efficiency (MPG)", color="Vehicle Class",shape="Type of Drive", size=cty)
plt + geom_point() + labs(x="Engine Size (L)", y="City Fuel-Efficiency (MPG)", color="Vehicle Class",shape="Type of Drive", size="MPG")
plt <- ggplot(mpg, aes(y=hwy))
plt + geom_boxplot()
plt <- ggplot(mpg, aes(x=manufacturer, y=hwy))
plt + geom_boxplot()
?geom_boxplot()
plt <- ggplot(mpg, aes(x=manufacturer, y=hwy, linetype="dash"))
plt + geom_boxplot()
plt <- ggplot(mpg, aes(x=manufacturer, y=hwy, linetype="dashed"))
plt + geom_boxplot()
plt <- ggplot(mpg, aes(x=manufacturer, y=hwy, lty="dashed"))
plt + geom_boxplot()
plt <- ggplot(mpg, aes(x=manufacturer, y=hwy, lty=dashed))
plt + geom_boxplot()
plt <- ggplot(mpg, aes(x=manufacturer, y=hwy, linetype="dashed"))
plt + geom_boxplot()
plt <- ggplot(mpg, aes(x=manufacturer, y=hwy, linetype=3))
plt + geom_boxplot()
plt <- ggplot(mpg, aes(x=manufacturer, y=hwy, linetype=g))
plt + geom_boxplot()
plt <- ggplot(mpg, aes(x=manufacturer, y=hwy, linetype="g"))
plt + geom_boxplot()
plt <- ggplot(mpg, aes(x=manufacturer, y=hwy, linetype="dashed"))
plt + geom_boxplot()
ggplot2.boxplot(data=mpg, x = manufacturer, y = hwy, linetype = "dashed")
plt <- ggplot(mpg, aes(x = manufacturer, y = hwy, linetype = "dashed"))
plt + geom_boxplot()
plt + geom_boxplot(linetype = "dashed")
plt + geom_boxplot(linetype = "dotted")
plt + geom_boxplot(linetype = "dotted", color=manufacturer)
plt <- ggplot(mpg, aes(x = manufacturer, y = hwy, color=manufacturer))
plt + geom_boxplot(linetype = "dotted")
plt + geom_boxplot()
heatmap_summary <- mpg %>% group_by(class, year) %>% summarize(Mean_Hwy=mean(hwy), .groups="keep")
plt <- ggplot(heatmap_summary, aes=class, y=factor(year), fill=Mean_Hwy)
plt + geom_tile() + labs(x="Vehicle Class", y= "Vehicle Year", fill="Mean Highway (MPG)")
plt <- ggplot(heatmap_summary, aes(x=class, y=factor(year), fill=Mean_Hwy)
plt + geom_tile() + labs(x="Vehicle Class", y= "Vehicle Year", fill="Mean Highway (MPG)")
plt <- ggplot(heatmap_summary, aes(x=class, y=factor(year), fill=Mean_Hwy))
plt + geom_tile() + labs(x="Vehicle Class", y= "Vehicle Year", fill="Mean Highway (MPG)")
heatmap_summary <- mpg %>% group_by(model, year) %>% summarize(Mean_Hwy=mean(hwy), .groups="keep")
plt <- ggplot(heatmap_summary, aes(x=model, y=factor(year), fill=Mean_Hwy))
plt + geom_tile() + labs(x="Model", y= "Vehicle Year", fill="Mean Highway (MPG)")
+ theme(axis.text.x = element_text(angle=90, hjust=1, vjust=0.5))
plt + geom_tile() + labs(x="Model", y= "Vehicle Year", fill="Mean Highway (MPG)") + theme(axis.text.x = element_text(angle=90, hjust=1, vjust=0.5))
plt + geom_boxplot() +                          # boxplot
theme(axis.text.x = element_text(angle=45, hjust=1)) + #adjust angle and tick match
geom_point()                                           #scatter
plt <- ggplot(mpg, aes(x=manufacturer, y=hwy)) #import data
plt + geom_boxplot() +                          # boxplot
theme(axis.text.x = element_text(angle=45, hjust=1)) + #adjust angle and tick match
geom_point()                                           #scatter
engine_summary <- mpg %>% group_by(class) %>% summarize(Mean_Engine = mean (displ), .groups = "keep")
View(engine_summary)
plt <- ggplot(engine_summary, aes(x=class, y=Mean_Engine))
plt + geom_point(size=4) + labs(x="Vehicle Class",y="Mean Engine Size")
engine_summary <- mpg %>% group_by(class) %>% summarize(Mean_Engine = mean (displ), SD_Engine=sd(displ), .groups = "keep") #transform
plt <- ggplot(engine_summary, aes(x=class, y=Mean_Engine)) #load
plt + geom_point(size=4) + labs(x="Vehicle Class",y="Mean Engine Size") + #scatter
geom_errorbar(aes(ymin=Mean_Engine-SD_Engine,ymax=Mean_Engine+SD_Engine))
mpg_long <- mpg %>% gather(key="MPG_Type",value="Rating",c(cty,hwy)) #convert to long format
head(mpg_long)
View(mpg_long)
#box
plt <- ggplot(mpg_long,aes(x=manufacturer,y=Rating,color=MPG_Type))
plt + geom_boxplot() + theme(axis.text.x=element_text(angle=45,hjust=1))
?facet_wrap
plt <- ggplot(mpg_long,aes(x=manufacturer,y=Rating,color=MPG_Type)) #import dataset into ggplot2
plt + geom_boxplot() + facet_wrap(vars(MPG_Type)) + #create multiple boxplots, one for each MPG type
theme(axis.text.x=element_text(angle=45,hjust=1),legend.position = "none") + xlab("Manufacturer") #rotate x-axis labels
setwd("C:/Users/sarah/Desktop/UCSD Data/Module 15/R_Analysis/MechaCar_Statistical_Analysis-")
library(dplyr)
df <- read.csv("Resources/MechaCar_mpg.csv")
View(df)
lm(mpg ~ vehicle_length + vehicle_weight + spoiler_angle + ground_clearance + AWD ,df)
summary(lm(mpg ~ vehicle_length + vehicle_weight + spoiler_angle + ground_clearance + AWD ,df))
#DELIVERABLE 1
mecha_df <- read.csv("Resources/MechaCar_mpg.csv")
lm(mpg ~ vehicle_length + vehicle_weight + spoiler_angle + ground_clearance + AWD ,mecha_df)
summary(lm(mpg ~ vehicle_length + vehicle_weight + spoiler_angle + ground_clearance + AWD, mecha_df))
#DELIVERABLE 2
suspension_df <- read.csv("Resources/Suspension_Coil.csv")
summarize(suspension_df)
View(suspension_df)
?summarize
total_summary <- suspension_df %>% group_by(Manufacturing_Lot) %>% summarize(Mean = mean(PSI), Median = median(PSI), Variance = var(PSI), SD = sd(PSI), .groups = "keep" )
View(total_summary)
total_summary <- suspension_df %>% summarize(Mean = mean(PSI), Median = median(PSI), Variance = var(PSI), SD = sd(PSI), .groups = "keep" )
lot_summary <- suspension_df %>% group_by(Manufacturing_Lot) %>% summarize(Mean = mean(PSI), Median = median(PSI), Variance = var(PSI), SD = sd(PSI), .groups = "keep" )
View(lot_summary)
?t.test
#DELIVERABLE 3
t.test(log10(suspension_df$PSI),mu=1500)
#DELIVERABLE 3
t.test(suspension_df$PSI,mu=1500)
#DELIVERABLE 3
t.test(suspension_df$PSI,mu=1500)
#Lot 1
t.test(suspension_df$PSI,
mu=1500,
subset = Manufacturing_Lot %in% "Lot 1" )
#Lot 2
t.test(suspension_df$PSI,
mu=1500,
subset = Manufacturing_Lot %in% "Lot 2" )
#Lot 3
t.test(suspension_df$PSI,
mu=1500,
subset = Manufacturing_Lot %in% "Lot 3" )
#Lot 3
t.test(suspension_df$PSI,
mu=1500,
subset = Manufacturing_Lot %in% c("Lot 3"))
#Lot 3
t.test(suspension_df$PSI,
mu=1500,
subset = Manufacturing_Lot == "Lot 3")
#Lot 3
t.test(suspension_df$PSI,
mu=1500,
subset = Manufacturing_Lot == "Lot3")
#Lot 3
t.test(suspension_df$PSI,
mu=1500,
subset = Manufacturing_Lot == "Lot3")
#Lot 3
t.test(suspension_df$PSI,
mu=1500,
subset = Manufacturing_Lot === "Lot3")
#Lot 3
t.test(suspension_df$PSI,
mu=1500,
subset = Manufacturing_Lot == "Lot3")
lot3_df <- suspension_df$PSI%in%"Lot3"
?count
lot_summary <- suspension_df %>% group_by(Manufacturing_Lot) %>%
summarize(Mean = mean(PSI), Median = median(PSI),
Variance = var(PSI), SD = sd(PSI),
Vehicle_Count = n(),
.groups = "keep" )
View(lot_summary)
#Lot 3
t.test(suspension_df$PSI,
mu=1500,
subset =Manufacturing_Lot== "Lot3")
#Lot 3
t.test(suspension_df$PSI,
mu=1500,
subset = suspension_df$Manufacturing_Lot== "Lot3")
#Lot 3
t.test(suspension_df$PSI,
mu=1500,
subset = [100:150])
#Lot 2
t.test(suspension_df$PSI,
mu=1500,
subset = Manufacturing_Lot %in% "Lot2" )
